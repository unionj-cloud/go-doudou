/**
* Generated by go-doudou v2.5.9.
* Don't edit!
 */
package vo

import "encoding/json"

func (k *KeyboardLayout) StringSetter(value string) {
	switch value {
	case "UNKNOWN":
		*k = UNKNOWN
	case "QWERTZ":
		*k = QWERTZ
	case "AZERTY":
		*k = AZERTY
	case "QWERTY":
		*k = QWERTY
	default:
		*k = UNKNOWN
	}
}

func (k *KeyboardLayout) StringGetter() string {
	switch *k {
	case UNKNOWN:
		return "UNKNOWN"
	case QWERTZ:
		return "QWERTZ"
	case AZERTY:
		return "AZERTY"
	case QWERTY:
		return "QWERTY"
	default:
		return "UNKNOWN"
	}
}

func (k *KeyboardLayout) UnmarshalJSON(bytes []byte) error {
	var _k string
	err := json.Unmarshal(bytes, &_k)
	if err != nil {
		return err
	}
	k.StringSetter(_k)
	return nil
}

func (k *KeyboardLayout) MarshalJSON() ([]byte, error) {
	return json.Marshal(k.StringGetter())
}

func (r *RoleEnum) StringSetter(value string) {
	switch value {
	case "GUEST":
		*r = GUEST
	case "USER":
		*r = USER
	case "ADMIN":
		*r = ADMIN
	default:
		*r = GUEST
	}
}

func (r *RoleEnum) StringGetter() string {
	switch *r {
	case GUEST:
		return "GUEST"
	case USER:
		return "USER"
	case ADMIN:
		return "ADMIN"
	default:
		return "GUEST"
	}
}

func (r *RoleEnum) UnmarshalJSON(bytes []byte) error {
	var _r string
	err := json.Unmarshal(bytes, &_r)
	if err != nil {
		return err
	}
	r.StringSetter(_r)
	return nil
}

func (r *RoleEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(r.StringGetter())
}
